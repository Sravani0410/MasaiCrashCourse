Write Mongo query to Find the products supplied by Supplier 1 or Supplier 2.
  sample output:
  [
  {
    "_id": 1,
    "name": "iPhone 13",
    "category_id": 1,
    "price": 999.99,
    "quantity": 50,
    "supplier_id": 1
  },
  {
    "_id": 2,
    "name": "Samsung Galaxy S21",
    "category_id": 1,
    "price": 899.99,
    "quantity": 30,
    "supplier_id": 2
  },
  {
    "_id": 5,
    "name": "MacBook Pro",
    "category_id": 1,
    "price": 1999.99,
    "quantity": 50,
    "supplier_id": 1
  }
]
sample database:
{
  "buyers": [
    {
      "_id": 1,
      "name": "John Smith",
      "email": "john@hotmail.com",
      "address": {
        "street": "123 Main St",
        "city": "New York",
        "state": "NY",
        "zip": "10001"
      }
    }
  ],
  "orders": [
    {
      "_id": 1,
      "customer_id": 1,
      "order_date": "2022-03-01",
      "ship_date": "2022-03-05",
      "status": "shipped"          // can be shipped or pending
      "total": 50.25
    }
  ],
  "products": [
    {
      "_id": 1,
      "name": "iPhone 13",
      "category_id": 1,
      "price": 999.99,
      "quantity": 50,
      "supplier_id": 1
    }
  ],
  "payments": [
    {
      "_id": 1,
      "payment_date": "2022-03-01",
      "amount": 50.25,
      "orderdtl_id": 1,
      "paymentMethod": "UPI",      // can be UPI, Debit Card, Cradit Card, COD or net banking
      "paymentstatus": "success"  // can be shipped, pending, or null
    }
  ],
  "categories": [
    {
      "_id": 1,
      "name": "Electronics"
    }
  ],
  "order_details": [
    {
      "_id": 1,
      "order_id": 1,
      "product_id": 1,
      "quantity": 1,
      "price": 999.99,
      "payment_id": 1,
      "shipper_id": 1
    }
  ],
  "shippers": [
    {
      "_id": 1,
      "name": "UPS",     // can be UPS , FedEx, or DHL
      "phone": "1-800-742-5877"
    }
  ],
  "suppliers": [
    {
      "_id": 1,
      "name": "Apple",
      "city": "Cupertino",
      "phone": "1-800-275-2273"
    }
  ]
}

solution:
========
db.products.find({
  "supplier_id": {
    "$in": [1, 2]
  }
})

we can implement through aggeration and lookup:
==================================================
db.products.aggregate([
  {
    $lookup: {
      from: "suppliers",
      localField: "supplier_id",
      foreignField: "_id",
      as: "supplier"
    }
  },
  {
    $match: {
      "supplier._id": { $in: [1, 2] }
    }
  },
  {
    $project: {
      _id: 1,
      name: 1,
      category_id: 1,
      price: 1,
      quantity: 1,
      supplier_id: 1
    }
  }
])

